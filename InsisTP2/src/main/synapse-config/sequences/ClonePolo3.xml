<?xml version="1.0" encoding="UTF-8"?>
<sequence name="ClonePolo3" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log description="Start">
        <property name="Polo3Status" value="STARTING..."/>
    </log>
    <payloadFactory media-type="xml">
        <format>
            <ns:GetObrasRequest xmlns:ns="http://demo0516930.mockable.io/service/1"/>
        </format>
        <args/>
    </payloadFactory>
    <header name="SOAPAction" scope="transport" value="GetObras"/>
    <property action="remove" description="Avoid appending resource to endpoint URL" name="REST_URL_POSTFIX" scope="axis2"/>
    <call>
        <endpoint key="polo3http"/>
    </call>
    <iterate expression="//*[starts-with(name(), 'Obra')]">
        <target>
            <sequence>
                <property description="Property Ano of Obra" expression="//*[starts-with(name(), 'ano')]" name="anoobra" scope="default" type="STRING"/>
                <property description="Property Titulo of Obra" expression="//*[starts-with(name(), 'titulo')]" name="titleobra" scope="default" type="STRING"/>
                <filter xpath="//*[get-property('anoobra')=get-property('uri.var.ano') and get-property('titleobra')=get-property('uri.var.titulo')] ">
                    <then>
                        <log description="Log success" level="custom">
                            <property expression="get-property('anoobra')" name="Log Validated Ano"/>
                            <property expression="get-property('uri.var.ano')" name="URIANO"/>
                            <property expression="get-property('uri.var.titulo')" name="URITITLE"/>
                            <property expression="get-property('titleobra')" name="Log Validated Title"/>
                        </log>
                    </then>
                    <else/>
                </filter>
            </sequence>
        </target>
    </iterate>
    <!--<foreach expression="//*[starts-with(name(), 'Obra')]">
        <sequence>
            <property description="Property Ano of Obra" expression="//*[starts-with(name(), 'ano')]" name="anoobra" scope="default" type="STRING"/>
            <conditionalRouter continueAfter="false">
                <conditionalRoute asynchronous="true" breakRoute="false">
                    <condition>
                        <equal source="get-property('anoobra')" type="param" value="get-property('uri.var.ano')"/>
                    </condition>
                    <target sequence="default"/>
                </conditionalRoute>
            </conditionalRouter>
            <property description="Property Titulo of Obra" expression="//*[starts-with(name(), 'titulo')]" name="titleobra" scope="default" type="STRING"/>
            <filter xpath="//*[get-property('anoobra')=get-property('uri.var.ano') and get-property('titleobra')=get-property('uri.var.titulo')] ">
                <then>
                    <log description="Log success" level="custom">
                        <property expression="get-property('anoobra')" name="Log Validated Ano"/>
                        <property expression="get-property('uri.var.ano')" name="URIANO"/>
                        <property expression="get-property('uri.var.titulo')" name="URITITLE"/>
                        <property expression="get-property('titleobra')" name="Log Validated Title"/>
                    </log>
                </then>
                <else/>
            </filter>
        </sequence>
    </foreach>  -->
    <log description="End">
        <property name="Polo3Status" value="ENDING..."/>
    </log>
</sequence>
